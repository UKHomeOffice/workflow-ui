---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: synch_dev_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: DEV_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: DEV_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: dev
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: synch_production_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: production
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: deploy_to_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export SPRING_PROFILES_ACTIVE="dev"
  - export WORKFLOW_UI_TAG=$${DRONE_COMMIT_SHA}
  - kd --insecure-skip-tls-verify -f kube/cert.yml
  - kd --insecure-skip-tls-verify -f kube/secret.yml
  - kd --insecure-skip-tls-verify -f kube/network-policy.yml
  - kd --insecure-skip-tls-verify -f kube/service.yml
  - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
  - kd --insecure-skip-tls-verify -f kube/ingress.yml
  environment:
    AWS_ACCESS_KEY:
      from_secret: DEV_WORKFLOW_UI_AWS_ACCESS_KEY_ID
    AWS_REGION:
      from_secret: AWS_REGION
    AWS_SECRETS_MANAGER_ENABLED:
      from_secret: DEV_WORKFLOW_UI_AWS_SECRETS_MANAGER_ENABLED
    AWS_SECRET_KEY:
      from_secret: DEV_WORKFLOW_UI_AWS_SECRET_ACCESS_KEY
    KUBE_NAMESPACE:
      from_secret: DEV_KUBE_NAMESPACE_COP_EFORMS
    KUBE_SERVER:
      from_secret: DEV_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: DEV_EFORMS_KUBE_TOKEN
    NGINX_IMAGE:
      from_secret: NGINX_IMAGE
    NGINX_TAG:
      from_secret: NGINX_TAG
    WORKFLOW_UI_IMAGE:
      from_secret: WORKFLOW_UI_IMAGE
    WORKFLOW_UI_NAME:
      from_secret: WORKFLOW_UI_NAME
    WORKFLOW_UI_URL:
      from_secret: DEV_WORKFLOW_UI_URL
  when:
    branch:
    - master
    event:
    - promote
    target:
    - dev

- name: deploy_to_production
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export SPRING_PROFILES_ACTIVE="production"
  - export WORKFLOW_UI_TAG=$${DRONE_COMMIT_SHA}
  - kd --insecure-skip-tls-verify -f kube/cert.yml
  - kd --insecure-skip-tls-verify -f kube/secret.yml
  - kd --insecure-skip-tls-verify -f kube/network-policy.yml
  - kd --insecure-skip-tls-verify -f kube/service.yml
  - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
  - kd --insecure-skip-tls-verify -f kube/ingress.yml
  environment:
    AWS_ACCESS_KEY:
      from_secret: PRODUCTION_WORKFLOW_UI_AWS_ACCESS_KEY_ID
    AWS_REGION:
      from_secret: AWS_REGION
    AWS_SECRETS_MANAGER_ENABLED:
      from_secret: PRODUCTION_WORKFLOW_UI_AWS_SECRETS_MANAGER_ENABLED
    AWS_SECRET_KEY:
      from_secret: PRODUCTION_WORKFLOW_UI_AWS_SECRET_ACCESS_KEY
    KUBE_NAMESPACE:
      from_secret: PRODUCTION_KUBE_NAMESPACE_COP_EFORMS
    KUBE_SERVER:
      from_secret: PRODUCTION_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: PRODUCTION_EFORMS_KUBE_TOKEN
    NGINX_IMAGE:
      from_secret: NGINX_IMAGE
    NGINX_TAG:
      from_secret: NGINX_TAG
    WORKFLOW_UI_IMAGE:
      from_secret: WORKFLOW_UI_IMAGE
    WORKFLOW_UI_NAME:
      from_secret: WORKFLOW_UI_NAME
    WORKFLOW_UI_URL:
      from_secret: PRODUCTION_WORKFLOW_UI_URL
  when:
    branch:
    - master
    event:
    - promote
    target:
    - production

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n  {{build.link}}\n{{else}}\n  *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*\n  {{build.link}}\n{{/build.deployTo}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - promote
    status:
    - success
    - failure

services:
- name: docker
  image: docker:19.03.12-dind
  volumes:
  - name: dockersock
    path: /var/run

- name: anchore-submission-server
  image: docker.digital.homeoffice.gov.uk/acp-anchore-submission:latest
  commands:
  - /anchore-submission server
  environment:
    ANCHORE_URL: acp-anchore.acp.homeoffice.gov.uk
    REGISTRY_URL: acp-ephemeral-registry.acp.homeoffice.gov.uk
  volumes:
  - name: dockersock
    path: /var/run

volumes:
- name: dockersock
  temp: {}

...
